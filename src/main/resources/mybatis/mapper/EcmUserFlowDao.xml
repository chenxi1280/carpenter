<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wxcz.carpenter.dao.EcmUserFlowDao">
  <resultMap id="BaseResultMap" type="com.wxcz.carpenter.pojo.entity.EcmUserFlow">
    <id column="user_flow_id" jdbcType="INTEGER" property="userFlowId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="surplus_flow" jdbcType="INTEGER" property="surplusFlow" />
    <result column="total_flow" jdbcType="INTEGER" property="totalFlow" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="check_flow" jdbcType="INTEGER" property="checkFlow" />
  </resultMap>
  <sql id="Base_Column_List">
    user_flow_id, user_id, surplus_flow, total_flow, update_time, check_flow
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ecm_user_flow
    where user_flow_id = #{userFlowId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ecm_user_flow
    where user_flow_id = #{userFlowId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="user_flow_id" keyProperty="userFlowId" parameterType="com.wxcz.carpenter.pojo.entity.EcmUserFlow" useGeneratedKeys="true">
    insert into ecm_user_flow (user_id, surplus_flow, total_flow,
      update_time, check_flow)
    values (#{userId,jdbcType=INTEGER}, #{surplusFlow,jdbcType=INTEGER}, #{totalFlow,jdbcType=INTEGER},
      #{updateTime,jdbcType=TIMESTAMP}, #{checkFlpw,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="user_flow_id" keyProperty="userFlowId" parameterType="com.wxcz.carpenter.pojo.entity.EcmUserFlow" useGeneratedKeys="true">
    insert into ecm_user_flow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="surplusFlow != null">
        surplus_flow,
      </if>
      <if test="totalFlow != null">
        total_flow,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="checkFlpw != null">
        check_flow,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="surplusFlow != null">
        #{surplusFlow,jdbcType=INTEGER},
      </if>
      <if test="totalFlow != null">
        #{totalFlow,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkFlpw != null">
        #{checkFlpw,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wxcz.carpenter.pojo.entity.EcmUserFlow">
    update ecm_user_flow
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="surplusFlow != null">
        surplus_flow = #{surplusFlow,jdbcType=INTEGER},
      </if>
      <if test="totalFlow != null">
        total_flow = #{totalFlow,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkFlpw != null">
        check_flow = #{checkFlpw,jdbcType=INTEGER},
      </if>
    </set>
    where user_flow_id = #{userFlowId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wxcz.carpenter.pojo.entity.EcmUserFlow">
    update ecm_user_flow
    set user_id = #{userId,jdbcType=INTEGER},
      surplus_flow = #{surplusFlow,jdbcType=INTEGER},
      total_flow = #{totalFlow,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      check_flow = #{checkFlpw,jdbcType=INTEGER}
    where user_flow_id = #{userFlowId,jdbcType=INTEGER}
  </update>

  <!--  sql-->
  <select id="selectByUserList" resultType="com.wxcz.carpenter.pojo.vo.EcmUserFlowVO">
    select <include refid="Base_Column_List" />
    from ecm_user_flow
    where user_id in <foreach collection="ids" separator="," open="(" close=")" item="id">
    #{id.pkUserId}
  </foreach>
  </select>
  <select id="selectByUserIds" resultType="com.wxcz.carpenter.pojo.vo.EcmUserFlowVO">
    select <include refid="Base_Column_List" />
    from ecm_user_flow
    where user_id in <foreach collection="ids" separator="," open="(" close=")" item="id">
    #{id}
  </foreach>
  </select>

  <update id="updateUserFlowCheck">
    update ecm_user_flow
    <trim prefix="set" suffixOverrides=",">

      <trim prefix="check_flow =case" suffix="end,">
        <foreach collection="list" item="item" index="index">
          <if test="item.checkFlow!=null">
            when user_id=#{item.userId}
            then #{item.checkFlow}
          </if>
        </foreach>
      </trim>
    </trim>

    where user_id in
    <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
      #{item.userId}
    </foreach>
  </update>

  <update id="updateUserFlowByCheck">
    update ecm_user_flow
    <trim prefix="set" suffixOverrides=",">

      <trim prefix="surplus_flow =case" suffix="end,">
        <foreach collection="list" item="item" index="index">
          <if test="item.surplusFlow!=null">
            when user_id=#{item.userId}
            then #{item.surplusFlow}
          </if>
        </foreach>
      </trim>

      <trim prefix="check_flow =case" suffix="end,">
        <foreach collection="list" item="item" index="index">
          <if test="item.checkFlow!=null">
            when user_id=#{item.userId}
            then #{item.checkFlow}
          </if>
        </foreach>
      </trim>


      <trim prefix="update_time =case" suffix="end,">
        <foreach collection="list" item="item" index="index">
          <if test="item.updateTime!=null">
            when user_id=#{item.userId}
            then #{item.updateTime}
          </if>
        </foreach>
      </trim>

    </trim>
    where user_id in
    <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
      #{item.userId}
    </foreach>

  </update>
</mapper>
